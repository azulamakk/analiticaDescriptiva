mean(XBOOT)
})
f
f=c()
f<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
mean(XBOOT)
})
f
errorq12 <- sqrt(var(f))
errorq12
mean(f)
set.seed(13)
f=c()
f<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
mean(XBOOT)
})
f
mean(f)
errorq12 <- sqrt(var(f))
errorq12
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
n <- length(x)
hist(x)
n <- length(x)
hist(x)
hist(x, breaks=7)
hist(x, breaks=7)
hist(x, breaks=5)
# Asimetria muestral
set.seed(13)
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sqrt(var(asimetria))
errorq12
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
# Asimetria muestral
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
# Asimetria muestral
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
# Asimetria muestral
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
# Asimetria muestral
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
# Asimetria muestral
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
# Asimetria muestral
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
# Curtosis muestral
curtosis=c()
curtosis<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum(((XBOOT-mean(XBOOT))/sd(XBOOT))^4)
})
curtosis
mean(curtosis)
errorq12 <- sqrt(var(curtosis))
errorq12
# Curtosis muestral
curtosis=c()
curtosis<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum(((XBOOT-mean(XBOOT))/sd(XBOOT))^4)
})
curtosis
mean(curtosis)
errorq12 <- sqrt(var(curtosis))
errorq12
# Curtosis muestral
curtosis=c()
curtosis<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum(((XBOOT-mean(XBOOT))/sd(XBOOT))^4)
})
curtosis
mean(curtosis)
errorq12 <- sqrt(var(curtosis))
errorq12
# Curtosis muestral
curtosis=c()
curtosis<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum(((XBOOT-mean(XBOOT))/sd(XBOOT))^4)
})
curtosis
mean(curtosis)
errorq12 <- sqrt(var(curtosis))
errorq12
# Curtosis muestral
curtosis=c()
curtosis<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum(((XBOOT-mean(XBOOT))/sd(XBOOT))^4)
})
curtosis
mean(curtosis)
errorq12 <- sqrt(var(curtosis))
errorq12
# Curtosis muestral
curtosis=c()
curtosis<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum(((XBOOT-mean(XBOOT))/sd(XBOOT))^4)
})
curtosis
mean(curtosis)
errorq12 <- sqrt(var(curtosis))
errorq12
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
mean(x)
sd(x)
length(x)
hist(x, freq=FALSE)
hist(x, breaks=5)$counts
fa <- c(hist(x, breaks=5)$counts)
nk <- length(fa)
li<-hist(x)$breaks[1:nk]
ls<-c(hist(x)$breaks[2:nk],NA)
table<-cbind.data.frame(li,ls,fa)
table
x <- c(15.6 , 78.8 , 10.3 , 1326.8 , 105.5 , 10.6 , 144.7 , 239 , 172.7 , 29.6 , 1122.8 , 119.1, 15.8 , 0.7 , 517.9 , 49.9 , 52.9 , 360.6 , 282.2 , 179.1 , 343.1 , 260.9 , 63.4 , 1 ,188.6 , 48.8 , 40 , 2.9 , 21 , 125.9 , 826.6 , 44.5 , 118.6 , 49 , 3.5 , 23.8 , 24.8 ,48.5 , 492.8 , 251.2 , 39.3 , 32.9 , 220.1 , 166.2)
p <- x>200
p
x <- c(15.6 , 78.8 , 10.3 , 1326.8 , 105.5 , 10.6 , 144.7 , 239 , 172.7 , 29.6 , 1122.8 , 119.1, 15.8 , 0.7 , 517.9 , 49.9 , 52.9 , 360.6 , 282.2 , 179.1 , 343.1 , 260.9 , 63.4 , 1 ,188.6 , 48.8 , 40 , 2.9 , 21 , 125.9 , 826.6 , 44.5 , 118.6 , 49 , 3.5 , 23.8 , 24.8 ,48.5 , 492.8 , 251.2 , 39.3 , 32.9 , 220.1 , 166.2)
n <- length(x)
set.seed(13)
p <-isTRUE(x>200)/n
p
x>200
p <-sum(x>200)/n
p
XBOOT=sample(x,n,replace=TRUE)
sample(x,n,replace=TRUE)
XBOOT
#Proporcion no parametrica
p <-sum(x>200)/n
set.seed(1167)
proporcion=c()
proporcion<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
p <-sum(XBOOT>200)/n
})
proporcion
mean(proporcion)
# Error estandar
errorq12 <- sqrt(var(proporcion))
errorq12
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2, -0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48, -1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
# Asimetria muestral
asimetria=c()
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
sum((x-mean(x))^3/sd(x))*(1/n)
asimetria=c()
asimOriginal = sum((x-mean(x))^3/sd(x))*(1/n)
asimetria<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum((XBOOT-mean(XBOOT))^3/sd(XBOOT))*(1/n)
})
asimetria
mean(asimetria)
errorq12 <- sd(asimetria)
errorq12
curtOriginal = sum(((x-mean(x))/sd(x))^4)
curtOriginal
curtosis=c()
curtOriginal = sum(((x-mean(x))/sd(x))^4)
curtosis<-replicate(1000,{
XBOOT=sample(x,n,replace=TRUE)
sum(((XBOOT-mean(XBOOT))/sd(XBOOT))^4)
})
curtosis
mean(curtosis)
# Error estandar
errorq12 <- sqrt(var(curtosis))
errorq12
n <- length(x)
n
sd(x)
curtOriginal = sum(((x-mean(x))/sd(x))^4)
curtOriginal
curtOriginal = sum(((x-mean(x))/sd(x))^4)
curtOriginal
# Contraste chi-cuadrado
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
mean(x)
sd(x)
length(x)
hist(x, freq=FALSE)
hist(x, breaks=5)$counts
fa <- c(hist(x, breaks=5)$counts)
nk <- length(fa)
li<-hist(x)$breaks[1:nk]
ls<-c(hist(x)$breaks[2:nk],NA)
table<-cbind.data.frame(li,ls,fa)
table
# Contraste chi-cuadrado
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
mean(x)
sd(x)
length(x)
hist(x, freq=FALSE)
hist(x, breaks=5)$counts
fa <- c(hist(x, breaks=5)$counts)
nk <- length(fa)
li<-hist(x)$breaks[1:nk]
ls<-c(hist(x)$breaks[2:nk],NA)
table<-cbind.data.frame(li,ls,fa)
table
x <- c(118.4 , 112.96 , 120.88 , 145.4 , 126.59 , 133.71 , 97.59 , 114.51 ,
36.42 , 114.96 ,70.66 , 150.51 , 129.74 , 69.97 , 82.77 , 4.96 , 97.79 ,
46.27 , 68.24 , 8.35 , 150.68 ,95.12 , 80.92 , 120.17 , 94.5 , 102.99 ,
166.53 , 115.48 , 123.32 , 92.17 , 129.18 ,121.46 , 124.15 , 113.68 ,
147.97 , 104.31 , 89.41 , 61.81 , 77.53 , 300.91 , 110.86 ,147.94 , 104.48 ,
166.08 , 147 , 150.78 , 121.25 , 188.61 , 147.13 , 170.24 , 114.42 ,123.36 ,
147.26 , 167.96 , 132.95 , 139.76 , 96.49 , 135.92 , 172.71 , 89.18 , 1.62 ,
73.09 , 148.85 , 160.65 , 135.9 , 114.51 , 185.65 , 130.65 , 153.54 , 78.12 ,
91.52 ,137.89 , 90.4 , 121.58 , 220.68 , 109.16 , 152.83 , 132 , 137.32 , 127.85 ,
139.76 ,39.34 , 113.63 , 143.43 , 187.01 , 114.44 , 116.36 , 151.84 , 107.02 , 134.38 ,
221.53 ,142.03 , 112.05 , 103.2 , 144.75 , 110.56 , 142.39 , 75.05 , 117.44 , 135.78)
error<- sd(x)/sqrt(length(x))
# Ejercicio SMOTE
rm(list=ls())
gc()
setwd("~/Desktop/1Q 2023/Analítica Descriptiva/Parte 2")
# Ejercicio SMOTE
rm(list=ls())
gc()
setwd("~/Desktop/1Q 2023/Analítica Descriptiva/Parte 2")
rm(list=ls())
gc()
setwd("/Users/azulmakk/Desktop/Analitica Descriptiva/Clases2")
rm(list=ls())
gc()
setwd("/Users/azulmakk/Desktop/Analitica Descriptiva/Clases2")
rm(list=ls())
gc()
setwd("/Users/azulmakk/Desktop/Analitica Descriptiva/Clases2")
rm(list=ls())
gc()
setwd("/Users/azulmakk/Desktop/Analitica Descriptiva/Clases2")
rm(list=ls())
gc()
setwd("/Users/azulmakk/Desktop/Analitica Descriptiva/Clases2")
rm(list=ls())
gc()
setwd("/Users/azulmakk/Desktop/Analitica Descriptiva/Clases2")
setwd("~/Desktop/Analitica Descriptiva/Clases")
# Ejercicio SMOTE
rm(list=ls())
gc()
setwd("~/Desktop/Analitica Descriptiva/Clases")
library(ggplot2)
library(knitr)
suppressMessages(library(dplyr))
library(readr)
# Leer el archivo y convertir en factor
credit_card_data <-read.csv("creditcard.csv")
credit_card_data$Class<-as.factor(credit_card_data$Class) # convert class to factor
levels(credit_card_data$Class) <- c('Legitimate', 'Fraud') # names of factors
summary(credit_card_data$Class)
prop.table(table(credit_card_data$Class))
# Gráfico de los datos
options(scipen=10000) # remove scientific notation when viewing plot
ggplot(data = credit_card_data, aes(fill = Class)) +
geom_bar(aes(x = Class))+
ggtitle("Number of samples in each class", subtitle = "Original dataset")+
xlab("")+
ylab("Samples")+
scale_y_continuous(expand = c(0,0))+
scale_x_discrete(expand = c(0,0))+
theme(legend.position = "none",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
# scatter plot original dataset
ggplot(data = credit_card_data, aes(x = V4, y = V7, colour = Class))+
geom_point()+
ggtitle("Original dataset")+
xlab("V4")+
ylab("V7")+
geom_point() +
xlim(-5, 15)+
ylim(-50, 50)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key=element_blank())
# Crear un dataframe solo on las variables y un vector con las respuestas de la variable objetivo
predictor_variables <- credit_card_data[,-31] # Select everything except response
response_variable <- credit_card_data$Class   # Only select response variable
# El caso minoritario debe tener el nivel de factor de 1, por defecto lo tiene codificado como 0.
levels(response_variable) <- c('0', '1')
# 1- Recopilar más datos
# 2- Utilizar las métricas de evaluación correctas
# 3- Undersampling o submuestreo
# 4- El sobremuestreo (SMOTE / ADASYN / DB SMOTE)
# SMOTE
#install.packages("smotefamily")
library(smotefamily)
x <- c(15.6 , 78.8 , 10.3 , 1326.8 , 105.5 , 10.6 , 144.7 , 239 , 172.7 , 29.6 , 1122.8 , 119.1, 15.8 , 0.7 , 517.9 , 49.9 , 52.9 , 360.6 , 282.2 , 179.1 , 343.1 , 260.9 , 63.4 , 1 ,188.6 , 48.8 , 40 , 2.9 , 21 , 125.9 , 826.6 , 44.5 , 118.6 , 49 , 3.5 , 23.8 , 24.8 ,48.5 , 492.8 , 251.2 , 39.3 , 32.9 , 220.1 , 166.2)
length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
mean(x)
sd(x)
length(x)
hist(x, freq=FALSE)
hist(x, breaks=5)$counts
fa <- c(hist(x, breaks=5)$counts)
nk <- length(fa)
li<-hist(x)$breaks[1:nk]
ls<-c(hist(x)$breaks[2:nk],NA)
table<-cbind.data.frame(li,ls,fa)
table
length(x)
x <- c(-0.16, -0.19, 1.52, -1.4, -0.5, -4.84, 15.9, 4.05, 19.27, -0.57, -2.74, -15.29, 2.06,5.2,
-0.88, 3.54, 18.45, -15.66, -0.28, 4.41, 2.31, 4.83, 17.88, -17.91, 2.5, 4.15,4.49, -0.93, 8.49, 1.31, 2.98, 11.3, -10.48,
-1.53, -4.71, 6.54, -13.43, -2.1, 5.21,4.21, 12.26, 0.46, -7.4, -9.33, 4.82)
mean(x)
sd(x)
length(x)
hist(x, freq=FALSE)
hist(x, breaks=5)$counts
fa <- c(hist(x, breaks=5)$counts)
nk <- length(fa)
li<-hist(x)$breaks[1:nk]
ls<-c(hist(x)$breaks[2:nk],NA)
table<-cbind.data.frame(li,ls,fa)
table
empirica <- function(x, a) {
return (sum(x<=a)/length(x))
}
fEmpirica = c()
for(i in 1: length(x)){
fEmpirica[i] <- empirica(x, x[i])
}
data <- read.csv("~/Desktop/Estadistica aplicada/1C2023/Clases/data_credit_card.csv")
x <- c(860, 810, 1060, 860, 840, 2120, 1200, 920, 1090, 980, 920, 2750, 880, 740, 700, 900, 1450, 1030, 3120, 960, 1000, 703, 950, 990, 970, 850, 900, 1040, 1020, 840)
n <- length(x)
n
quantile(x, 0.95)
data <- read.csv("~/Desktop/Estadistica aplicada/1C2023/Clases/data_credit_card.csv")
data <- read.csv("~/Desktop/Estadistica aplicada/1C2023/Clases/data_credit_card.csv")
plot(ecdf(x))
x <- c(860, 810, 1060, 860, 840, 2120, 1200, 920, 1090, 980, 920, 2750, 880, 740, 700, 900, 1450, 1030, 3120, 960, 1000, 703, 950, 990, 970, 850, 900, 1040, 1020, 840)
plot(ecdf(x))
sd(x)
mean(x)
sum(log(x))/length(x)
eme <- sum(log(x))/length(x)
(sum(log(x)-eme)^2)/length(x)
sum((log(x)-eme)^2)/length(x)
sum((log(x)-eme)^2)/length(x)
curtosis <- (sum((x-mean(x))/sd(x)))^3*(1/length(x))
asimetria <- ((sum(x-mean(x))/sd(x))^4)
x <- c(860, 810, 1060, 860, 840, 2120, 1200, 920, 1090, 980, 920, 2750, 880, 740, 700, 900, 1450, 1030, 3120, 960, 1000, 703, 950, 990, 970, 850, 900, 1040, 1020, 840)
asimetria <- ((sum(x-mean(x))/sd(x))^4)
asimetria <- ((sum((x-mean(x))/sd(x)))^4)
asimetria <- ((sum((x-mean(x))/sd(x)))^4)
asimetria <- ((sum((x-mean(x))/sd(x)))^4)
eme <- sum(log(x))/length(x)
asimetria
asimetria <- ((sum((x-mean(x))/sd(x))^4)
asimetria <- sum((x-mean(x))/sd(x))^4
asimetria <- sum((x-mean(x))/sd(x))^4
asimetria
length(x)
sd(x)
hist(x)
eme <- sum(log(x))/length(x)
de <- sum((log(x)-eme)^2)/length(x)
asimetria <- sum((x-eme)/de)^4
x <- c(860, 810, 1060, 860, 840, 2120, 1200, 920, 1090, 980, 920, 2750, 880, 740, 700, 900, 1450, 1030, 3120, 960, 1000, 703, 950, 990, 970, 850, 900, 1040, 1020, 840)
sum(((x-mean(x))/sd(x))^4)
sum((x-mean(x))^3/sd(x))*(1/n)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum(((x-mean(x))/sd(x))^4)
sum((x-mean(x))^3/sd(x))*(1/n)
sum((x-mean(x))^3/sd(x))*(1/n)
sum((x-mean(x))^3/sd(x))*(1/n)
# Ejercicio SMOTE
rm(list=ls())
gc()
library(ggplot2)
library(knitr)
suppressMessages(library(dplyr))
library(readr)
# Leer el archivo y convertir en factor
credit_card_data <-read.csv("/Users/azulmakk/Desktop/BackupClases/creditcard.csv")
